"""
Django settings for market_dajngo project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from market_dajngo.helpful import read_env_file_and_set_from_venv, get_ip_container_from_name_container

BASE_DIR = Path(__file__).resolve().parent.parent

# read_env_file_and_set_from_venv('./__env.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w9jtgs$shfeswxg2e*k066j*(nft)=xn71zu3702xw)y@jj)@='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
		'django.contrib.admin',
		'django.contrib.auth',
		'django.contrib.contenttypes',
		'django.contrib.sessions',
		'django.contrib.messages',
		'django.contrib.staticfiles',
		'mainapp.apps.MainappConfig',
		'django_cleanup',
]

MIDDLEWARE = [
		'django.middleware.security.SecurityMiddleware',
		'django.contrib.sessions.middleware.SessionMiddleware',
		'django.middleware.common.CommonMiddleware',
		'django.middleware.csrf.CsrfViewMiddleware',
		'django.contrib.auth.middleware.AuthenticationMiddleware',
		'django.contrib.messages.middleware.MessageMiddleware',
		'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'market_dajngo.urls'

TEMPLATES = [
		{
				'BACKEND' : 'django.template.backends.django.DjangoTemplates',
				'DIRS'    : [],
				'APP_DIRS': True,
				'OPTIONS' : {
						'context_processors': [
								'django.template.context_processors.debug',
								'django.template.context_processors.request',
								'django.contrib.auth.context_processors.auth',
								'django.contrib.messages.context_processors.messages',
						],
				},
		},
]

WSGI_APPLICATION = 'market_dajngo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


CACHES = {
		'default': {
				'BACKEND' : 'django.core.cache.backends.filebased.FileBasedCache',
				'LOCATION': os.path.join(BASE_DIR, 'mai_cache')
		}
}

DATABASES = {
		
		# 'default': {
		# 		'ENGINE'  : 'django.db.backends.postgresql_psycopg2',  # Адаптер
		# 		'NAME'    : 'market_3',  # Имя Бд
		# 		'USER'    : 'postgres',  # Имя пользователя
		# 		'PASSWORD': '123',  # Пароль пользователя
		# 		'HOST'    : '127.0.0.1',  # Хост, мы будем использовать локальный сервер.
		# 		'PORT'    : 5432,  # Порт для подключения. По умолчанию это 5432
		# },
		
		'default': {
				
				'ENGINE'  : 'django.db.backends.postgresql_psycopg2',  # Адаптер
				'NAME'    : os.environ.get('POSTGRES_DB', 'market'),  # Имя Бд
				'USER'    : os.environ.get('POSTGRES_USER', 'postgres'),  # Имя пользователя
				'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 123),  # Пароль от пользователя
				'HOST'    : os.environ.get('POSTGRES_HOST', '127.0.0.1'),
				# Хост, имя контейнера.
				'PORT'    : os.environ.get('POSTGRES_PORT', 5432),  # Порт для подключения к БД.
		},
		
		# 'default': {
		# 		'ENGINE': 'django.db.backends.sqlite3',
		# 		'NAME'  : BASE_DIR / 'db.sqlite3',
		# }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
		{
				'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
		},
		{
				'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
		},
		{
				'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
		},
		{
				'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
		},
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'  # URL-адрес для использования при обращении к статическим файлам, расположенным в STATIC_ROOT.
STATIC_ROOT = os.path.join(BASE_DIR, "static/")  # Путь к общей статической папки.
STATICFILES_DIRS = [
		# os.path.join(BASE_DIR, "static"),
]

MEDIA_URL = '/media/'  # Добавляет к файлам префикс
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # Имя папки в корневом каталоге

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG:
	INSTALLED_APPS.append('debug_toolbar')
	INTERNAL_IPS = [
			'127.0.0.1',
	]
	MIDDLEWARE.append('debug_toolbar.middleware.DebugToolbarMiddleware')

# INSTALLED_APPS.append('livereload')
# MIDDLEWARE.append('livereload.middleware.LiveReloadScript')

# CACHES = {
#
# 		'default': {
# 				'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
# 		}
# }

# Info = Debugger(**dINFO)
# Debug = Debugger(**dDEBUG)
# Warning = Debugger(**dWARNING)
# if not os.environ.get('console_debugger', False):  # Для защиты от двойного запуска Django
# 	os.environ['console_debugger'] = "True"
# else:
# 	Debugger.GlobalManager(typePrint="socket")
